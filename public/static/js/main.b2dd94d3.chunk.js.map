{"version":3,"sources":["components/MyMap/MyMap.module.css","store/actions/index.js","store/selectors.js","components/Header/Header.js","components/PrivateRoute/PrivateRoute.js","services/helpers.js","components/LoginForm/LoginForm.js","components/MyMap/MyMap.js","components/OrderForm/OrderForm.js","components/ProfileAlert/ProfileAlert.js","components/OrderAlert/OrderAlert.js","components/OrderPage/OrderPage.js","components/MapContainer/MapContainer.js","components/ProfileForm/ProfileForm.js","components/RootRouter/RootRouter.js","store/reducers/authReducer.js","store/reducers/loadAddressesReducer.js","store/reducers/coordsReducer.js","store/reducers/index.js","store/store.js","services/instance.js","services/helpers_api.js","store/middlewares/authSaga.js","store/middlewares/addressesSaga.js","store/middlewares/coordsSaga.js","store/middlewares/localStorageSaga.js","store/middlewares/index.js","index.js"],"names":["module","exports","container","login","createAction","logout","testAuth","handleProfileSubmit","handleProfileClear","fetchAddressesRequest","fetchAddressesSuccess","fetchAddressesFailure","fetchCoordsRequest","fetchCoordsSuccess","fetchCoordsFailure","setIsOrderMade","getIsLoggedIn","state","authReducer","isLoggedIn","getProfile","profile","getIsProfileFilled","Object","keys","length","getIsLoadingAddresses","loadAddressesReducer","isLoadingAddresses","getLoadErrorText","errorText","getMyAddresses","myAddresses","getIsLoadingCoords","coordsReducer","isLoadingCoords","getCoordsError","error","getCoords","coords","getIsOrderMade","isOrderMade","Header","handleLogout","_this$props","_this","props","_this$props2","this","classes","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","className","grow","Button_default","component","Link","to","onClick","Component","mapDispatchToProps","connect","withStyles","theme","flexGrow","rest","objectWithoutProperties","react_router","assign","render","renderTextField","_ref","type","label","name","input","placeholder","_ref$meta","meta","touched","invalid","custom","TextField_default","margin","helperText","LoginForm","renderInputs","react","Grid_default","item","xs","concat","alignLeft","fieldAlign","Field","fullWidth","renderForm","handleSubmit","isSubmitting","spacing","alignItems","justify","sm","md","Paper_default","onSubmit","form","alignCenter","loader","CircularProgress_default","values","username","userName","password","userPassword","WrappedLoginForm","compose","width","height","display","flexDirection","justifyContent","padding","unit","reduxForm","validate","errors","test","MyMap","map","mapContainer","React","createRef","renderRoute","orderCoords","addLayer","id","source","data","properties","geometry","coordinates","paint","line-width","line-color","flyTo","center","mapboxgl","accessToken","Map","current","style","zoom","prevProps","getLayer","removeLayer","removeSource","remove","styles","ref","OrderForm","address1","address2","handleChange","event","setState","defineProperty","target","value","handleButtonClick","_this$state","objectSpread","MyAddresses","_this$state2","select","onChange","MenuItem_default","address","key","_this$props3","_this$props4","_this$state3","disabled","WrappedOrderForm","header","body","btnText","linkTo","OrderAlert","handleClick","errorCoords","WrappedOrderAlert","WrappedOrderPage","isProfile","maxWidth","zIndex","top","components_OrderForm_OrderForm","components_OrderAlert_OrderAlert","components_ProfileAlert_ProfileAlert","MapContainer","components_MyMap_MyMap","components_OrderPage_OrderPage","cardNameFormatter","replace","cardNumberFormatter","onlyNum","substring","match","join","cardNumberParser","expDateFormatter","month","year","cvvFormatter","ProfileForm","isUpdated","requiredFields","handleClear","change","forEach","field","required","format","parse","InputLabelProps","shrink","renderAlert","WrappedProfileForm","initialValues","formcolumn","Date","now","RootRouter","react_router_dom","components_Header_Header","path","exact","components_PrivateRoute_PrivateRoute","initialState","arguments","undefined","action","toString","payload","initialAddressesState","rootReducer","combineReducers","formReducer","getInitialState","localStorage","JSON","sagaMiddleware","createSagaMiddleware","getStore","createStore","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","noop","myHttp","axios","create","baseURL","checkAuth","trim","method","mode","then","response","loadAddressList","loadCoords","_ref2","authPostWorker","authWorker","authWatcher","result","regenerator_default","wrap","_context","prev","next","call","sent","abrupt","t0","message","stop","_marked","_context2","put","startSubmit","stopSubmit","_error","success","_marked2","_context3","takeLeading","_marked3","loadAddressesWorker","loadAddressesWatcher","addresses","addressesSaga_marked","takeEvery","addressesSaga_marked2","getCoordsWorker","getCoordsWatcher","coordsSaga_marked","coordsSaga_marked2","saveProfileWatcher","clearProfileWatcher","logoutWatcher","loginWatcher","handleLocalStorageSaga","saveProfileWorker","_action$payload","stringify","clearProfileWorker","logoutWorker","loginWorker","localStorageSaga_marked","localStorageSaga_marked2","localStorageSaga_marked3","_context4","_marked4","_context5","spawn","_marked5","rootSaga","middlewares_marked","store","run","ReactDOM","es","components_RootRouter_RootRouter","document","getElementById"],"mappings":"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","file":"static/js/main.b2dd94d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MyMap_container__3pm5F\"};","import {createAction} from 'redux-actions';\r\n\r\nexport const login = createAction('LOGIN');\r\nexport const logout = createAction('LOGOUT');\r\nexport const testAuth = createAction('AUTH');\r\n\r\nexport const handleProfileSubmit = createAction('HANDLE_PROFILE_SUBMIT');\r\nexport const handleProfileClear = createAction('HANDLE_PROFILE_CLEAR');\r\n\r\nexport const fetchAddressesRequest = createAction('FETCH_ADDRESSES_REQUEST');\r\nexport const fetchAddressesSuccess = createAction('FETCH_ADDRESSES_SUCCESS');\r\nexport const fetchAddressesFailure = createAction('FETCH_ADDRESSES_FAILURE');\r\n\r\nexport const fetchCoordsRequest = createAction('FETCH_COORDS_REQUEST');\r\nexport const fetchCoordsSuccess = createAction('FETCH_COORDS_SUCCESS');\r\nexport const fetchCoordsFailure = createAction('FETCH_COORDS_FAILURE');\r\n\r\nexport const setIsOrderMade = createAction('SET_IS_ORDER_MADE');","export const getIsLoggedIn = state => state.authReducer.isLoggedIn;\r\nexport const getProfile = state => state.authReducer.profile;\r\nexport const getIsProfileFilled = state => Object.keys(state.authReducer.profile).length > 0;\r\n\r\nexport const getIsLoadingAddresses = state => state.loadAddressesReducer.isLoadingAddresses;\r\nexport const getLoadErrorText = state => state.loadAddressesReducer.errorText;\r\nexport const getMyAddresses = state => state.loadAddressesReducer.myAddresses;\r\n\r\nexport const getIsLoadingCoords = state => state.coordsReducer.isLoadingCoords;\r\nexport const getCoordsError = state => state.coordsReducer.error;\r\nexport const getCoords = state => state.coordsReducer.coords;\r\nexport const getIsOrderMade = state => state.coordsReducer.isOrderMade;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport { logout, setIsOrderMade } from '../../store/actions';\r\nimport { getIsLoggedIn } from '../../store/selectors';\r\n\r\n\r\nconst styles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    }\r\n});\r\n\r\n\r\nclass Header extends Component {\r\n    static propTypes = {\r\n        logout: PropTypes.func.isRequired,\r\n        setIsOrderMade: PropTypes.func.isRequired,\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    }\r\n\r\n    handleLogout = () => {\r\n        const { logout, setIsOrderMade } = this.props;\r\n        setIsOrderMade(false);\r\n        logout()\r\n    }\r\n\r\n    render(){\r\n        const {isLoggedIn, classes} = this.props;\r\n\r\n        return (\r\n            <AppBar position='static' color='inherit'>\r\n                <Toolbar>\r\n                    <Typography variant='h5' color='default' className={classes.grow}>Loft Taxi</Typography>\r\n                    <Button component={Link} to='/map' color='default'>Карта</Button>\r\n                    <Button component={Link} to='/profile' color='default'>Профиль</Button>\r\n                    <Button \r\n                        component={Link} \r\n                        to='/login' \r\n                        color='default' \r\n                        onClick={this.handleLogout}\r\n                    >\r\n                        {isLoggedIn ? 'Выйти' : 'Войти'}\r\n                    </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: getIsLoggedIn(state),\r\n});\r\nconst mapDispatchToProps = { logout, setIsOrderMade };\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withStyles(styles)(Header))","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getIsLoggedIn } from '../../store/selectors';\r\n\r\nconst PrivateRoute = (props) => {\r\n    const { component: Component, isLoggedIn, ...rest } = props;\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={props => isLoggedIn\r\n                ? <Component {...props}/>\r\n                : <Redirect to='/login'/>\r\n            }\r\n        />\r\n    )\r\n};\r\n\r\nPrivateRoute.propTypes = {\r\n    isLoggedIn: PropTypes.bool.isRequired,\r\n    component: PropTypes.oneOfType([\r\n        PropTypes.func,\r\n        PropTypes.element\r\n    ]).isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: getIsLoggedIn(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute)","import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const renderTextField = ({\r\n        type,\r\n        name,\r\n        label,\r\n        input,\r\n        placeholder,\r\n        meta: {touched, invalid, error},\r\n        ...custom\r\n    }) => (\r\n        <TextField\r\n            label={label}\r\n            placeholder={placeholder ? placeholder : label}\r\n            margin='none'\r\n            type={type}\r\n            error={touched && error && true}\r\n            helperText={touched && error}\r\n            {...input}\r\n            {...custom}\r\n        />\r\n)\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Field, reduxForm, isSubmitting } from \"redux-form\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport { login, testAuth } from \"../../store/actions\";\r\nimport { getIsLoggedIn } from \"../../store/selectors\";\r\nimport { renderTextField } from \"../../services/helpers\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"stretch\",\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    fieldAlign: {\r\n        display: \"flex\"\r\n    },\r\n    alignLeft: {\r\n        justifyContent: \"flex-start\"\r\n    },\r\n    alignCenter: {\r\n        justifyContent: \"center\"\r\n    },\r\n    loader: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: 192\r\n    }\r\n});\r\n\r\nclass LoginForm extends Component {\r\n    static propTypes = {\r\n        login: PropTypes.func.isRequired,\r\n        testAuth: PropTypes.func.isRequired,\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        handleSubmit: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n\r\n    renderInputs = () => {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n                >\r\n                    <Field\r\n                        name=\"userName\"\r\n                        component={renderTextField}\r\n                        label=\"Имя пользователя\"\r\n                        type=\"text\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    className={`${classes.alignLeft} ${classes.fieldAlign}`}\r\n                >\r\n                    <Field\r\n                        name=\"userPassword\"\r\n                        component={renderTextField}\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        fullWidth\r\n                    />\r\n                </Grid>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    renderForm = () => {\r\n        const { classes, handleSubmit, isSubmitting } = this.props;\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                className={classes.container}\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item xs={8} sm={6} md={4}>\r\n                    <Paper\r\n                        component=\"form\"\r\n                        onSubmit={handleSubmit(this.handleSubmit)}\r\n                    >\r\n                        <Grid container spacing={24} className={classes.form}>\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                className={`${classes.alignCenter} ${\r\n                                    classes.fieldAlign\r\n                                }`}\r\n                            >\r\n                                <Typography variant=\"h4\">Войти</Typography>\r\n                            </Grid>\r\n                            {isSubmitting ? (\r\n                                <Grid item xs={12} className={classes.loader}>\r\n                                    <CircularProgress />\r\n                                </Grid>\r\n                            ) : (\r\n                                this.renderInputs()\r\n                            )}\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                className={`${classes.alignLeft} ${\r\n                                    classes.fieldAlign\r\n                                }`}\r\n                            >\r\n                                <Button\r\n                                    variant=\"outlined\"\r\n                                    color=\"primary\"\r\n                                    type=\"submit\"\r\n                                    component=\"button\"\r\n                                >\r\n                                    Войти\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    handleSubmit = values => {\r\n        const { userName: username, userPassword: password } = values;\r\n        const { testAuth } = this.props;\r\n\r\n        testAuth({ username, password });\r\n    };\r\n\r\n    render() {\r\n        const { isLoggedIn } = this.props;\r\n        return (\r\n            <Fragment>\r\n                {isLoggedIn ? <Redirect to=\"/map\" /> : this.renderForm()}\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst loginSyncValidator = values => {\r\n    const errors = {};\r\n    if (!values.userName) {\r\n        errors.userName = \"Надо указать логин\";\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.userName)\r\n    ) {\r\n        errors.userName = \"Тут нужен ваш e-mail\";\r\n    }\r\n    if (!values.userPassword) errors.userPassword = \"Надо указать пароль\";\r\n    return errors;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: getIsLoggedIn(state),\r\n    isSubmitting: isSubmitting(\"loginform\")(state)\r\n});\r\nconst mapDispatchToProps = { login, testAuth };\r\n\r\nconst WrappedLoginForm = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    ),\r\n    withStyles(styles),\r\n    reduxForm({ form: \"loginform\", validate: loginSyncValidator })\r\n)(LoginForm);\r\n\r\nexport default WrappedLoginForm;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport mapboxgl from 'mapbox-gl';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './MyMap.module.css';\r\nimport { getCoords, getIsOrderMade } from '../../store/selectors';\r\n\r\nclass MyMap extends Component{\r\n    static propTypes = {\r\n        orderCoords: PropTypes.array,\r\n        isOrderMade: PropTypes.bool.isRequired\r\n    }\r\n\r\n    map = null;\r\n    mapContainer = React.createRef();\r\n  \r\n    componentDidMount() {\r\n      mapboxgl.accessToken = \"pk.eyJ1Ijoia29ub3ZhbG92YS1hbmFzdCIsImEiOiJjanJkZHN4a3QwYWpjNDRwODdpNGp0cHA2In0.OQvQUUwv8c7DJQouM-dPTA\";\r\n      this.map = new mapboxgl.Map({\r\n        container: this.mapContainer.current,\r\n        style: \"mapbox://styles/mapbox/streets-v9\",\r\n        center: [30.2656504, 59.8029126],\r\n        zoom: 15\r\n      });\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (prevProps !== this.props) {\r\n            const { isOrderMade, orderCoords } = this.props\r\n        \r\n            if(!isOrderMade && this.map.getLayer('route')){\r\n                this.map.removeLayer('route');\r\n                this.map.removeSource('route');\r\n            }\r\n            \r\n            if(isOrderMade && orderCoords && orderCoords.length > 0) {\r\n                if(prevProps.orderCoords !== orderCoords) this.renderRoute()\r\n            }\r\n        }\r\n    }\r\n\r\n    renderRoute = () => {\r\n        const { orderCoords } = this.props;\r\n        this.map.addLayer({\r\n            id: 'route',\r\n            type: 'line',\r\n            source: {\r\n                type: 'geojson',\r\n                data: {\r\n                    type: 'Feature',\r\n                    properties: {\r\n                        color: '#F7455D' \r\n                    },\r\n                    geometry: {\r\n                        type: 'LineString',\r\n                        coordinates: orderCoords\r\n                    }\r\n                }\r\n            }, \r\n            paint: {\r\n                'line-width': 8,\r\n                'line-color': ['get', 'color']\r\n            }\r\n        })\r\n\r\n        this.map.flyTo({\r\n            center: orderCoords[0]\r\n        })\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      this.map.remove();\r\n    }\r\n  \r\n    render() {\r\n      return <div className={styles.container} ref={this.mapContainer} />;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    orderCoords: getCoords(state),\r\n    isOrderMade: getIsOrderMade(state)\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(MyMap)","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nimport { \r\n    fetchAddressesRequest, \r\n    fetchCoordsRequest, \r\n    setIsOrderMade } from '../../store/actions';\r\nimport { \r\n    getIsLoadingAddresses, \r\n    getLoadErrorText, \r\n    getMyAddresses, \r\n    getIsLoadingCoords } from '../../store/selectors';\r\n\r\nconst styles = theme => ({\r\n    fieldAlign: {\r\n        display: 'flex',\r\n    },\r\n    alignLeft: {\r\n        justifyContent: 'flex-start'\r\n    },\r\n    alignCenter: {\r\n        justifyContent: 'center'\r\n    },\r\n    loader: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 192\r\n    }\r\n})\r\n\r\nclass OrderForm extends Component {\r\n    static propTypes = {\r\n        fetchAddressesRequest: PropTypes.func.isRequired,\r\n        fetchCoordsRequest: PropTypes.func.isRequired,\r\n        setIsOrderMade: PropTypes.func.isRequired,\r\n        isLoadingAddresses: PropTypes.bool,\r\n        isLoadingCoords: PropTypes.bool.isRequired,\r\n        errorText: PropTypes.string,\r\n        errorCoords: PropTypes.string,\r\n        MyAddresses: PropTypes.array.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    }\r\n\r\n    state = {\r\n        address1: '',\r\n        address2: '',\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    handleButtonClick = () => {\r\n        const { fetchCoordsRequest, setIsOrderMade } = this.props;\r\n        const { address1, address2 } =this.state;\r\n        \r\n        if(address1 && address2) fetchCoordsRequest({address1, address2});\r\n        setIsOrderMade(true);\r\n        this.setState({\r\n            ...this.state, \r\n            address1: '',\r\n            address2: '',\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const { fetchAddressesRequest, MyAddresses } = this.props;\r\n        if(!MyAddresses || MyAddresses.length === 0) fetchAddressesRequest();\r\n    }\r\n\r\n    renderInputs = () => {\r\n        const { \r\n            classes, \r\n            MyAddresses } = this.props;\r\n        const { address1, address2 } =this.state;\r\n        return (\r\n            <Fragment>\r\n                <Grid item xs={12} className={`${classes.alignCenter} ${classes.fieldAlign}`}>\r\n                    {\r\n                        <TextField\r\n                            id=\"address-1\"\r\n                            name=\"address1\"\r\n                            select\r\n                            margin=\"normal\"\r\n                            label=\"Пункт отправления\"\r\n                            value={this.state.address1}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        >\r\n                            <MenuItem value=''>Пункт отправления</MenuItem>\r\n                            {\r\n                                MyAddresses.map(address => (\r\n                                    address2 === address\r\n                                    ? address\r\n                                    : <MenuItem key={address} value={address}>{address}</MenuItem>\r\n                                ))\r\n                            }\r\n                        </TextField>\r\n                    }\r\n                </Grid>\r\n                <Grid item xs={12} className={`${classes.alignCenter} ${classes.fieldAlign}`}>\r\n                    {\r\n                        <TextField\r\n                            id=\"address-2\"\r\n                            name=\"address2\"\r\n                            select\r\n                            margin=\"normal\"\r\n                            label=\"Пункт назначения\"\r\n                            value={this.state.address2}\r\n                            onChange={this.handleChange}\r\n                            fullWidth\r\n                        >\r\n                            <MenuItem value='' >Пункт назначения</MenuItem>\r\n                            {\r\n                                MyAddresses.map(address => (\r\n                                    address1 === address\r\n                                    ? address\r\n                                    : <MenuItem key={address} value={address}>{address}</MenuItem>\r\n                                ))\r\n                            }\r\n                        </TextField>\r\n                    }\r\n                </Grid>\r\n            </Fragment>\r\n        )\r\n    }\r\n\r\n    render(){\r\n        const { \r\n            classes, \r\n            isLoadingAddresses, \r\n            errorText } = this.props;\r\n        const { address1, address2 } =this.state;\r\n        return (\r\n            <Grid container spacing={24}>\r\n                <Grid item xs={12} className={`${classes.alignCenter} ${classes.fieldAlign}`}>\r\n                    <Typography variant='h4'>Вызов такси</Typography>\r\n                </Grid>\r\n                {errorText && (\r\n                    <Grid item xs={12} className={`${classes.alignCenter} ${classes.fieldAlign}`}>\r\n                        <Typography variant='body1'>{errorText}</Typography>\r\n                    </Grid>\r\n                )}\r\n\r\n                {\r\n                    isLoadingAddresses\r\n                    ? <Grid item xs={12} className={classes.loader}><CircularProgress/></Grid>\r\n                    : this.renderInputs()\r\n                }\r\n\r\n                <Grid item xs={12} className={`${classes.alignLeft} ${classes.fieldAlign}`}>\r\n                    <Button \r\n                        variant=\"outlined\" \r\n                        color=\"primary\" \r\n                        component='button'\r\n                        disabled={!address1 || !address2}\r\n                        onClick={this.handleButtonClick}\r\n                    >\r\n                        Вызвать такси\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoadingAddresses: getIsLoadingAddresses(state),\r\n    errorText: getLoadErrorText(state),\r\n    MyAddresses: getMyAddresses(state),\r\n    isLoadingCoords: getIsLoadingCoords(state)\r\n});\r\nconst mapDispatchToProps = { fetchAddressesRequest, fetchCoordsRequest, setIsOrderMade };\r\n\r\nconst WrappedOrderForm = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withStyles(styles),\r\n)(OrderForm);\r\n\r\nexport default WrappedOrderForm","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nconst styles = theme => ({\r\n    fieldAlign: {\r\n        display: 'flex',\r\n    },\r\n    alignLeft: {\r\n        justifyContent: 'flex-start'\r\n    },\r\n    alignCenter: {\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\nconst ProfileAlert = (props) => {\r\n    const { classes, header, body, btnText, linkTo } = props;\r\n\r\n    return (\r\n        <Grid container spacing={24} >\r\n            <Grid item xs={12} className={`${classes.alignCenter} ${classes.fieldAlign}`}>\r\n                <Typography variant='h4'>{header}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n                <Typography variant='body1'>{body}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12} className={`${classes.alignLeft} ${classes.fieldAlign}`}>\r\n                <Button component={Link} variant=\"outlined\" color=\"primary\" to={linkTo}>{btnText}</Button>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nProfileAlert.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    body: PropTypes.string.isRequired,\r\n    btnText: PropTypes.string.isRequired,\r\n    linkTo: PropTypes.string.isRequired,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ProfileAlert)","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { setIsOrderMade } from '../../store/actions';\r\nimport { getCoordsError } from '../../store/selectors';\r\n\r\nconst styles = theme => ({\r\n    fieldAlign: {\r\n        display: 'flex',\r\n    },\r\n    alignLeft: {\r\n        justifyContent: 'flex-start'\r\n    },\r\n    alignCenter: {\r\n        justifyContent: 'center'\r\n    }\r\n})\r\n\r\nclass OrderAlert extends Component{\r\n    static propTypes = {\r\n        setIsOrderMade: PropTypes.func.isRequired,\r\n        classes: PropTypes.object.isRequired\r\n    }\r\n\r\n    handleClick = () => {\r\n        const { setIsOrderMade } = this.props;\r\n        setIsOrderMade(false)\r\n    }\r\n\r\n    render(){\r\n        const { classes, errorCoords } = this.props;\r\n\r\n        return (\r\n            <Grid container spacing={24} >\r\n                <Grid item xs={12} className={`${classes.alignCenter} ${classes.fieldAlign}`}>\r\n                    <Typography variant='h4'>Заказ размещён</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {errorCoords && <Typography variant='body1'>{errorCoords}</Typography>}\r\n                    {!errorCoords && <Typography variant='body1'>Ваше такси уже едет к вам. Прибудет приблизительно через 10 минут</Typography>}\r\n                </Grid>\r\n                <Grid item xs={12} className={`${classes.alignLeft} ${classes.fieldAlign}`}>\r\n                    <Button variant=\"outlined\" color=\"primary\" component='button' onClick={this.handleClick}>сделать новый заказ</Button>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errorCoords: getCoordsError(state)\r\n});\r\nconst mapDispatchToProps = { setIsOrderMade };\r\n\r\nconst WrappedOrderAlert = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withStyles(styles),\r\n)(OrderAlert);\r\n\r\nexport default WrappedOrderAlert\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport OrderForm from '../OrderForm';\r\nimport ProfileAlert from '../ProfileAlert';\r\nimport OrderAlert from '../OrderAlert';\r\nimport { getIsProfileFilled, getIsOrderMade } from '../../store/selectors';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: '100%',\r\n        height: '100%',\r\n        position: 'absolute',\r\n    },\r\n    form: {\r\n        margin: 30,\r\n        maxWidth: 300,\r\n        position: 'absolute',\r\n        zIndex: 200,\r\n        top: 70,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'stretch',\r\n        padding: theme.spacing.unit * 3,\r\n    }\r\n})\r\n\r\nconst OrderPage = (props) => {\r\n    const { classes, isProfile, isOrderMade } = props;\r\n    return (\r\n        <Grid container spacing={0} className={classes.container} alignItems='center' justify='flex-start'>\r\n            <Grid item xs={12} md={8}>\r\n                <Paper className={classes.form}>\r\n                    {isProfile && !isOrderMade && <OrderForm/>}\r\n                    {isProfile && isOrderMade && <OrderAlert/>}\r\n                    {!isProfile && \r\n                        <ProfileAlert\r\n                            header='Заполните платежные данные'\r\n                            body='Укажите информацию о банковской карте, чтобы сделать заказ.'\r\n                            btnText='перейти в профиль'\r\n                            linkTo='/profile'\r\n                        />}\r\n                    \r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    ) \r\n}\r\n\r\nOrderPage.propTypes = {\r\n    isProfile: PropTypes.bool.isRequired,\r\n    isOrderMade: PropTypes.bool,\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isProfile: getIsProfileFilled(state),\r\n    isOrderMade: getIsOrderMade(state)\r\n});\r\nconst mapDispatchToProps = null;\r\n\r\nconst WrappedOrderPage = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withStyles(styles),\r\n)(OrderPage);\r\n\r\nexport default WrappedOrderPage","import React, { Fragment } from 'react';\r\n\r\nimport MyMap from '../MyMap';\r\nimport OrderPage from '../OrderPage';\r\n\r\nconst MapContainer = (props) => (\r\n    <Fragment>\r\n        <MyMap/>\r\n        <OrderPage/>\r\n    </Fragment>    \r\n)\r\n\r\nexport default MapContainer","import React, { Component, Fragment } from \"react\";\r\nimport { compose } from \"redux\";\r\nimport { Field, reduxForm, change } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport ProfileAlert from \"../ProfileAlert\";\r\nimport { renderTextField } from \"../../services/helpers\";\r\nimport {\r\n    login,\r\n    handleProfileSubmit,\r\n    handleProfileClear\r\n} from \"../../store/actions\";\r\nimport { getIsLoggedIn, getProfile } from \"../../store/selectors\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\"\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        padding: theme.spacing.unit * 3\r\n    },\r\n    formcolumn: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"stretch\"\r\n    },\r\n    fieldAlign: {\r\n        display: \"flex\"\r\n    },\r\n    alignLeft: {\r\n        justifyContent: \"flex-start\"\r\n    },\r\n    alignCenter: {\r\n        justifyContent: \"center\"\r\n    }\r\n});\r\n\r\nconst cardNameFormatter = value => {\r\n    if (!value) return \"\";\r\n    const onlyLetters = value.replace(/[^A-Za-z\\s]/, \"\");\r\n    return onlyLetters || \"\";\r\n};\r\n\r\nconst cardNumberFormatter = value => {\r\n    if (!value) return \"\";\r\n\r\n    const onlyNum = value.replace(/[^\\d\\s]/g, \"\");\r\n    const reg = /\\d{1,4}/g;\r\n    return (\r\n        onlyNum &&\r\n        onlyNum\r\n            .substring(0, 16)\r\n            .match(reg)\r\n            .join(\" \")\r\n    );\r\n};\r\n\r\nconst cardNumberParser = value => {\r\n    if (!value) return \"\";\r\n    return value.replace(/\\s/g, \"\");\r\n};\r\n\r\nconst expDateFormatter = value => {\r\n    if (!value || value === \"/\") return \"\";\r\n    const onlyNum = value.replace(/\\D/g, \"\");\r\n    if (onlyNum) {\r\n        let month = onlyNum.substring(0, 2);\r\n        let year = onlyNum.substring(2, 4);\r\n        if (+month > 12) month = \"12\";\r\n        return `${month}/${year}`;\r\n    } else {\r\n        return \"\";\r\n    }\r\n};\r\n\r\nconst cvvFormatter = value => {\r\n    if (!value) return \"\";\r\n\r\n    const onlyNum = value.replace(/[^\\d]/, \"\");\r\n    return onlyNum && onlyNum.substring(0, 3);\r\n};\r\n\r\nconst profileSyncValidator = values => {\r\n    const requiredFields = [\"cardName\", \"cardNumber\", \"expDate\", \"cvv\"];\r\n    const errors = {};\r\n    requiredFields.forEach(field => {\r\n        if (!values[field]) errors[field] = \"Это обязательное поле\";\r\n    });\r\n    if (values[\"expDate\"]) {\r\n        let month = values[\"expDate\"].substring(0, 2);\r\n        let year = values[\"expDate\"].substring(3);\r\n        const date = new Date(+(\"20\" + year), +month - 1);\r\n        if (+date < Date.now()) errors[\"expDate\"] = \"Дата указана неверно\";\r\n    }\r\n    if (!/^\\S+\\s\\S+$/gi.test(values[\"cardName\"]))\r\n        errors[\"cardName\"] = \"Укажите имя как на карте\";\r\n    if (values[\"cardNumber\"] && values[\"cardNumber\"].length < 16)\r\n        errors[\"cardNumber\"] = \"Номер карты должен состоять из 16 цифр\";\r\n    if (!/^\\d{3}$/gi.test(values[\"cvv\"]))\r\n        errors[\"cvv\"] = \"CVV должен состоять из 3 цифр\";\r\n    return errors;\r\n};\r\n\r\nclass ProfileForm extends Component {\r\n    static propTypes = {\r\n        login: PropTypes.func.isRequired,\r\n        handleProfileSubmit: PropTypes.func.isRequired,\r\n        handleProfileClear: PropTypes.func.isRequired,\r\n        change: PropTypes.func.isRequired,\r\n        handleSubmit: PropTypes.func.isRequired,\r\n        isLoggedIn: PropTypes.bool.isRequired,\r\n        initialValues: PropTypes.object,\r\n        classes: PropTypes.object.isRequired\r\n    };\r\n\r\n    state = {\r\n        isUpdated: false\r\n    };\r\n\r\n    requiredFields = [\"cardName\", \"cardNumber\", \"expDate\", \"cvv\"];\r\n\r\n    handleSubmit = values => {\r\n        const { isLoggedIn, handleProfileSubmit } = this.props;\r\n        this.setState({\r\n            ...this.state,\r\n            isUpdated: true\r\n        });\r\n        handleProfileSubmit({ isLoggedIn, profile: { ...values } });\r\n    };\r\n\r\n    handleClear = () => {\r\n        const { handleProfileClear, change } = this.props;\r\n        this.setState({\r\n            isUpdated: false\r\n        });\r\n        this.requiredFields.forEach(field => change(field, \"\"));\r\n        handleProfileClear();\r\n    };\r\n\r\n    renderForm = () => {\r\n        const { classes, handleSubmit } = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Paper\r\n                    component=\"form\"\r\n                    onSubmit={handleSubmit(this.handleSubmit)}\r\n                >\r\n                    <Grid container spacing={16} className={classes.form}>\r\n                        <Grid item xs={12}>\r\n                            <Typography\r\n                                variant=\"h4\"\r\n                                className={`${classes.alignCenter} ${\r\n                                    classes.fieldAlign\r\n                                }`}\r\n                            >\r\n                                Профиль\r\n                            </Typography>\r\n                            <Typography\r\n                                variant=\"h6\"\r\n                                className={`${classes.alignLeft} ${\r\n                                    classes.fieldAlign\r\n                                }`}\r\n                            >\r\n                                Способ оплаты\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <Field\r\n                                name=\"cardName\"\r\n                                component={renderTextField}\r\n                                label=\"Имя владельца\"\r\n                                type=\"text\"\r\n                                required\r\n                                fullWidth\r\n                                format={cardNameFormatter}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <Field\r\n                                name=\"cardNumber\"\r\n                                component={renderTextField}\r\n                                label=\"Номер карты\"\r\n                                required\r\n                                fullWidth\r\n                                format={cardNumberFormatter}\r\n                                parse={cardNumberParser}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <Field\r\n                                name=\"expDate\"\r\n                                component={renderTextField}\r\n                                label=\"Дата окончания действия\"\r\n                                required\r\n                                fullWidth\r\n                                placeholder=\"__ /__\"\r\n                                InputLabelProps={{ shrink: true }}\r\n                                format={expDateFormatter}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6} md={6}>\r\n                            <Field\r\n                                name=\"cvv\"\r\n                                component={renderTextField}\r\n                                label=\"CVV\"\r\n                                required\r\n                                fullWidth\r\n                                format={cvvFormatter}\r\n                            />\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={6}\r\n                            className={`${classes.alignLeft} ${\r\n                                classes.fieldAlign\r\n                            }`}\r\n                        >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                type=\"submit\"\r\n                            >\r\n                                Сохранить\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid\r\n                            item\r\n                            xs={6}\r\n                            className={`${classes.alignLeft} ${\r\n                                classes.fieldAlign\r\n                            }`}\r\n                        >\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                component=\"button\"\r\n                                onClick={this.handleClear}\r\n                            >\r\n                                Удалить\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    renderAlert = () => {\r\n        const { classes } = this.props;\r\n        return (\r\n            <Fragment>\r\n                <Paper className={classes.form}>\r\n                    <ProfileAlert\r\n                        header=\"Профиль\"\r\n                        body=\"Платёжные данные обновлены. Теперь вы можете заказывать такси.\"\r\n                        btnText=\"перейти на карту\"\r\n                        linkTo=\"/map\"\r\n                    />\r\n                </Paper>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { isUpdated } = this.state;\r\n        return (\r\n            <Grid\r\n                container\r\n                spacing={0}\r\n                className={classes.container}\r\n                alignItems=\"center\"\r\n                justify=\"center\"\r\n            >\r\n                <Grid item xs={10} md={6}>\r\n                    {isUpdated ? this.renderAlert() : this.renderForm()}\r\n                </Grid>\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoggedIn: getIsLoggedIn(state),\r\n    initialValues: getProfile(state)\r\n});\r\nconst mapDispatchToProps = {\r\n    login,\r\n    handleProfileSubmit,\r\n    handleProfileClear,\r\n    change\r\n};\r\n\r\nconst WrappedProfileForm = compose(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    ),\r\n    withStyles(styles),\r\n    reduxForm({ form: \"profileform\", validate: profileSyncValidator })\r\n)(ProfileForm);\r\n\r\nexport default WrappedProfileForm;\r\n","import React, { Component, Fragment } from 'react';\r\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nimport Header from '../Header';\r\nimport PrivateRoute from '../PrivateRoute';\r\nimport LoginForm from '../LoginForm';\r\nimport MapContainer from '../MapContainer';\r\nimport ProfileForm from '../ProfileForm';\r\n\r\n\r\nclass RootRouter extends Component {\r\n    render(){\r\n        return (\r\n            <BrowserRouter>\r\n                <Fragment>\r\n                    <Header/>\r\n                    <Switch>\r\n                        <Route path='/login' component={LoginForm}/>\r\n                        <Redirect path='/' exact to='login'/>\r\n                        <PrivateRoute path={`/map`} component={MapContainer}/>\r\n                        <PrivateRoute path={`/profile`} component={ProfileForm}/>\r\n                    </Switch>\r\n                </Fragment>\r\n            </BrowserRouter>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RootRouter","import {login, logout, handleProfileSubmit, handleProfileClear} from '../actions';\r\n\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    profile: {}\r\n}\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case login.toString():\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n            }\r\n\r\n        case logout.toString():\r\n\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            }\r\n\r\n        case handleProfileSubmit.toString():\r\n            const {profile} = action.payload\r\n            return {\r\n                ...state,\r\n                profile: profile \r\n            }\r\n\r\n        case handleProfileClear.toString():\r\n            return {\r\n                ...state,\r\n                profile: {} \r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { fetchAddressesRequest, fetchAddressesSuccess, fetchAddressesFailure} from '../actions';\r\n\r\nconst initialAddressesState = {\r\n    myAddresses: [],\r\n    isLoadingAddresses: null,\r\n    error: null,\r\n    errorText: null\r\n}\r\n\r\nconst loadAddressesReducer = (state = initialAddressesState, action) => {\r\n    switch(action.type){\r\n        case fetchAddressesRequest.toString():\r\n            return {\r\n                ...state,\r\n                isLoadingAddresses: true \r\n            }\r\n\r\n        case fetchAddressesSuccess.toString():\r\n            return {\r\n                ...state,\r\n                myAddresses: action.payload,\r\n                isLoadingAddresses: false,\r\n                error: null,\r\n                errorText: null\r\n            }\r\n\r\n        case fetchAddressesFailure.toString():\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                errorText: 'Ошибка загрузки. Проверьте подключение к сети',\r\n                isLoadingAddresses: false \r\n            }\r\n\r\n        default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default loadAddressesReducer;","import {fetchCoordsRequest, fetchCoordsSuccess, fetchCoordsFailure, setIsOrderMade} from '../actions';\r\n\r\nconst initialState = {\r\n    isLoadingCoords: false,\r\n    error: null,\r\n    coords: null,\r\n    isOrderMade: false\r\n}\r\n\r\n\r\nconst coordsReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case fetchCoordsRequest.toString():\r\n            return {\r\n                ...state,\r\n                isLoadingCoords: true,\r\n            }\r\n\r\n        case fetchCoordsSuccess.toString():\r\n            return {\r\n                ...state,\r\n                error: null,\r\n                coords: action.payload,\r\n                isLoadingCoords: false,\r\n                \r\n            }\r\n\r\n        case fetchCoordsFailure.toString():\r\n            return {\r\n                ...state,\r\n                coords: null,\r\n                error: action.payload,\r\n                errorCoords: 'Ошибка построения маршрута. Проверьте подключение к сети',\r\n                isLoadingCoords: false,\r\n            }\r\n\r\n        case setIsOrderMade.toString():\r\n            return {\r\n                ...state,\r\n                isOrderMade: action.payload\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default coordsReducer;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport authReducer from './authReducer';\r\nimport loadAddressesReducer from './loadAddressesReducer';\r\nimport coordsReducer from './coordsReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    authReducer,\r\n    loadAddressesReducer,\r\n    coordsReducer,\r\n    form: formReducer\r\n})\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './reducers';\r\n\r\n\r\n\r\nconst getInitialState = () => {\r\n    let {isLoggedIn, profile} = localStorage.state \r\n    ? JSON.parse(localStorage.state) \r\n    : {isLoggedIn: false, profile: {}};\r\n    if(profile === undefined) profile = {};\r\n    if(isLoggedIn === undefined) isLoggedIn = false;\r\n    return {isLoggedIn: isLoggedIn, profile: profile};\r\n}\r\n\r\nexport const sagaMiddleware = createSagaMiddleware();\r\n\r\nconst getStore = () => createStore(\r\n    rootReducer, \r\n    {authReducer: {...getInitialState()}},\r\n    compose(\r\n        applyMiddleware(sagaMiddleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ \r\n        ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        : noop => noop\r\n    )\r\n)\r\nexport default getStore\r\n","import axios from 'axios';\r\n\r\nexport const myHttp = axios.create({\r\n  baseURL: 'https://backend-loft-taxi.glitch.me'\r\n});\r\n","import { myHttp } from './instance';\r\n\r\nexport const checkAuth = ({username, password}) => {\r\n    return myHttp(`/auth?username=${username.trim()}&password=${password.trim()}`, {\r\n        method: 'GET',\r\n        mode: 'cors'\r\n    })\r\n    .then(response => response)\r\n};\r\n\r\nexport const loadAddressList = () => {\r\n    return myHttp('/addressList', {\r\n        method: 'GET',\r\n        mode: 'cors'\r\n    })\r\n    .then(response =>  response)\r\n};\r\n\r\nexport const loadCoords = ({address1, address2}) => {\r\n    return myHttp(`/route?address1=${address1}&address2=${address2}`, {\r\n        method: 'GET',\r\n        mode: 'cors'\r\n    })\r\n    .then(response => response )\r\n};","import { startSubmit, stopSubmit } from \"redux-form\";\r\nimport { put, call, takeLeading } from \"redux-saga/effects\";\r\n\r\nimport { login, testAuth } from '../actions';\r\nimport { checkAuth } from '../../services/helpers_api';\r\n\r\nexport function * authPostWorker(action) {\r\n    try {\r\n        const result = yield call(checkAuth, action.payload)\r\n        return result\r\n    } catch (error) {\r\n        return {error: error.message}\r\n    }\r\n}\r\n\r\nexport function * authWorker (action){\r\n    yield put(startSubmit('loginform'));\r\n    const {error, data} = yield call(authPostWorker, action);\r\n    if (error){\r\n        yield put(stopSubmit('loginform', {\r\n            userName: 'Ошибка сети', \r\n            userPassword: 'Ошибка сети', \r\n            _error: error\r\n        }))\r\n    } else if(!data.success){\r\n        yield put(stopSubmit('loginform', {\r\n            userName: 'Неверное имя пользователя или пароль', \r\n            userPassword: 'Неверное имя пользователя или пароль', \r\n            _error: data.error\r\n        }))\r\n    } else if(data.success){\r\n        yield put(login());\r\n    }\r\n}\r\n\r\nexport function * authWatcher(){\r\n    yield takeLeading (testAuth.toString(), authWorker)\r\n}\r\n\r\n","import { put, call, takeEvery } from \"redux-saga/effects\";\r\nimport {\r\n    fetchAddressesRequest, \r\n    fetchAddressesSuccess, \r\n    fetchAddressesFailure } from '../actions';\r\nimport { loadAddressList } from '../../services/helpers_api';\r\n\r\nexport function * loadAddressesWorker(){\r\n    try {\r\n        const {error, data} = yield call(loadAddressList);\r\n        if(!error) yield put(fetchAddressesSuccess(data.addresses));\r\n        if(error) yield put(fetchAddressesFailure(error))\r\n    } catch (error){\r\n        yield put(fetchAddressesFailure(error))\r\n    }\r\n}\r\n\r\nexport function * loadAddressesWatcher(){\r\n    yield takeEvery(fetchAddressesRequest.toString(), loadAddressesWorker);\r\n};\r\n","import { put, call, takeEvery } from \"redux-saga/effects\";\r\n\r\nimport {\r\n    fetchCoordsRequest, \r\n    fetchCoordsSuccess, \r\n    fetchCoordsFailure} from '../actions';\r\nimport {loadCoords} from '../../services/helpers_api';\r\n\r\n\r\nexport function * getCoordsWorker(action){\r\n    try {\r\n        const { error, data } = yield call(loadCoords, action.payload);\r\n        if(!error) yield put(fetchCoordsSuccess(data));\r\n        if(error) yield put(fetchCoordsFailure(error))\r\n    } catch (error) {\r\n        yield put(fetchCoordsFailure(error))\r\n    }\r\n}\r\n\r\nexport function * getCoordsWatcher(){\r\n    yield takeEvery(fetchCoordsRequest.toString(), getCoordsWorker);\r\n};\r\n","import { spawn, takeLeading, takeEvery } from \"redux-saga/effects\";\r\nimport {handleProfileSubmit, handleProfileClear, logout, login} from '..//actions';\r\n\r\nfunction saveProfileWorker(action) {\r\n    const {isLoggedIn, profile} = action.payload;\r\n    localStorage.state = JSON.stringify({isLoggedIn, profile});\r\n}\r\n\r\nfunction clearProfileWorker() {\r\n    const {isLoggedIn} = localStorage.state ? JSON.parse(localStorage.state) : false;\r\n    localStorage.state = JSON.stringify({isLoggedIn: isLoggedIn});\r\n}\r\n\r\nfunction logoutWorker(action){\r\n    const isLoggedIn = false;\r\n    const {profile} = localStorage.state ? JSON.parse(localStorage.state) : {};\r\n    localStorage.state = JSON.stringify({isLoggedIn: isLoggedIn, profile});\r\n}\r\n\r\nfunction loginWorker(action){\r\n    const isLoggedIn = true;\r\n    const {profile} = localStorage.state ? JSON.parse(localStorage.state) : {};\r\n    localStorage.state = JSON.stringify({isLoggedIn: isLoggedIn, profile});\r\n}\r\n\r\nfunction * saveProfileWatcher(){\r\n    yield takeLeading(handleProfileSubmit.toString(), saveProfileWorker)\r\n}\r\n\r\nfunction * clearProfileWatcher(){\r\n    yield takeLeading(handleProfileClear.toString(), clearProfileWorker)\r\n}\r\n\r\nfunction * logoutWatcher(){\r\n    yield takeEvery(logout.toString(), logoutWorker)\r\n}\r\n\r\nfunction * loginWatcher(){\r\n    yield takeEvery(login.toString(), loginWorker)\r\n}\r\n\r\nexport function * handleLocalStorageSaga(){\r\n    yield spawn(saveProfileWatcher)\r\n    yield spawn(clearProfileWatcher)\r\n    yield spawn(logoutWatcher)\r\n    yield spawn(loginWatcher)\r\n}","import { spawn } from \"redux-saga/effects\";\r\n\r\nimport {authWatcher} from './authSaga';\r\nimport {loadAddressesWatcher} from './addressesSaga';\r\nimport {getCoordsWatcher} from './coordsSaga';\r\nimport {handleLocalStorageSaga} from './localStorageSaga';\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield spawn(authWatcher)\r\n    yield spawn(loadAddressesWatcher)\r\n    yield spawn(getCoordsWatcher)\r\n    yield spawn(handleLocalStorageSaga)\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'normalize.css';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport RootRouter from './components/RootRouter';\r\nimport getStore, {sagaMiddleware} from './store/store';\r\n\r\nimport rootSaga from './store/middlewares';\r\n\r\nconst store = getStore();\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n        <Provider store={store}>\r\n            <RootRouter/>\r\n        </Provider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}